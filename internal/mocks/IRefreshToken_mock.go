// Code generated by MockGen. DO NOT EDIT.
// Source: IRefreshToken.go
//
// Generated by this command:
//
//	mockgen -source=IRefreshToken.go -destination=../mocks/IRefreshToken_mock.go -package=mocks
//

// Package mocks is a generated GoMock package.
package mocks

import (
	context "context"
	reflect "reflect"
	helpers "test-plus/helpers"
	models "test-plus/internal/model"

	gin "github.com/gin-gonic/gin"
	gomock "go.uber.org/mock/gomock"
)

// MockIRefreshTokenService is a mock of IRefreshTokenService interface.
type MockIRefreshTokenService struct {
	ctrl     *gomock.Controller
	recorder *MockIRefreshTokenServiceMockRecorder
	isgomock struct{}
}

// MockIRefreshTokenServiceMockRecorder is the mock recorder for MockIRefreshTokenService.
type MockIRefreshTokenServiceMockRecorder struct {
	mock *MockIRefreshTokenService
}

// NewMockIRefreshTokenService creates a new mock instance.
func NewMockIRefreshTokenService(ctrl *gomock.Controller) *MockIRefreshTokenService {
	mock := &MockIRefreshTokenService{ctrl: ctrl}
	mock.recorder = &MockIRefreshTokenServiceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockIRefreshTokenService) EXPECT() *MockIRefreshTokenServiceMockRecorder {
	return m.recorder
}

// RefreshToken mocks base method.
func (m *MockIRefreshTokenService) RefreshToken(ctx context.Context, refreshToken string, tokenClaim helpers.ClaimToken) (models.RefreshTokenResponse, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "RefreshToken", ctx, refreshToken, tokenClaim)
	ret0, _ := ret[0].(models.RefreshTokenResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// RefreshToken indicates an expected call of RefreshToken.
func (mr *MockIRefreshTokenServiceMockRecorder) RefreshToken(ctx, refreshToken, tokenClaim any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "RefreshToken", reflect.TypeOf((*MockIRefreshTokenService)(nil).RefreshToken), ctx, refreshToken, tokenClaim)
}

// MockIRefreshTokenHandler is a mock of IRefreshTokenHandler interface.
type MockIRefreshTokenHandler struct {
	ctrl     *gomock.Controller
	recorder *MockIRefreshTokenHandlerMockRecorder
	isgomock struct{}
}

// MockIRefreshTokenHandlerMockRecorder is the mock recorder for MockIRefreshTokenHandler.
type MockIRefreshTokenHandlerMockRecorder struct {
	mock *MockIRefreshTokenHandler
}

// NewMockIRefreshTokenHandler creates a new mock instance.
func NewMockIRefreshTokenHandler(ctrl *gomock.Controller) *MockIRefreshTokenHandler {
	mock := &MockIRefreshTokenHandler{ctrl: ctrl}
	mock.recorder = &MockIRefreshTokenHandlerMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockIRefreshTokenHandler) EXPECT() *MockIRefreshTokenHandlerMockRecorder {
	return m.recorder
}

// RefreshToken mocks base method.
func (m *MockIRefreshTokenHandler) RefreshToken(arg0 *gin.Context) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "RefreshToken", arg0)
}

// RefreshToken indicates an expected call of RefreshToken.
func (mr *MockIRefreshTokenHandlerMockRecorder) RefreshToken(arg0 any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "RefreshToken", reflect.TypeOf((*MockIRefreshTokenHandler)(nil).RefreshToken), arg0)
}
